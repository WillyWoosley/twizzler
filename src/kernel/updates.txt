acpi *
    - one small break, seems minor about needing type signature, but who knows. Also no CHANGELOG, so anything that breaks but still compiles bouta be missed
    - new version turns ProcessorInfo into ProcessorInfo<T: Allocator>, Allocator is currently unstable and would require adding more nonsense, probably don't wanna touch rn
addr2line *
    - very broke because of gimli update, all around EndianRcSlice not existing, but EndianSlice does so IDK, gotta check
    - probably has to do with feature flags, working in a no-std environment but this thing depends on std a lot, but also that was always the case I think? Fuck me I don't know where I am
        - seems like maybe this internal to gimli, was a change with handling of feature flags for read, I believe right before breaking change (0.25->26 I think?) came out
    - issue is with feature flags/what is enabled with the re-export of gimli from addr2line versus the subset we actually want. What actually changed about this between the versions in question is actually so unclear to me, but IDK and IDC. Can be fixed by manually introducing gimli as a seperate dependency in Cargo.toml for kernel. Would work, but issue becomes that backtracer_core does the same thing but with an outdated version of both addr2line and gimli, so you get versioning conflicts between the two. I think that the issue will be cleared up if we can get a backtracer_core bump through though. Also note that this way of doing things is almost guaranteed to introduce dupes, but also they only differ by feature flag and I think we're going to just go ahead and say that that is fine
bitflags **
tock-registers
    - maybe a weird thing about target platform, not sure what exactly is going on here but maybe leave it untouched for the moment

object ---------
tar-no-std -----
uart_16550 -----
xmas-elf -------

* breaking change
** update bitflags should be its own thing
